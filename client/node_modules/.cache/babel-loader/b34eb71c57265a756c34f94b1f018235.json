{"ast":null,"code":"var _jsxFileName = \"/Users/Ken/Dropbox/Rutgers_Coding_BootCamp/React-Portfolio/client/src/components/Resume/index.js\",\n    _s = $RefreshSig$();\n\n// RESUME JS\n// ---------------------------------------------------------------------------\n// import React, { useState } from 'react';\n// import { Document, Page } from 'react-pdf'\n// // import \"./style.css\";\n// function Resume() {\n//     \n//     const [file, setFile] = useState('./kenneth-petiote.pdf');\n//     const [numPages, setNumPages] = useState(null);\n//     const [pageNumber, setPageNumber] = useState(1);\n//     function onDocumentLoadSuccess({ numPages }) {\n//         setNumPages(numPages);\n//     }\n//     return (\n//         <div>\n//             <Document \n//                 file={file}\n//                 onLoadSuccess={onDocumentLoadSuccess} \n//             >\n//                 <Page pageNumber={1} />\n//             </Document>\n//             <p>\n//                 Page {pageNumber} of {numPages}\n//             </p>\n//         </div>\n//     )\n// }\n// export default Resume;\nimport React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css'; // import './Sample.less';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  cMapUrl: 'cmaps/',\n  cMapPacked: true\n};\nexport default function Sample() {\n  _s();\n\n  const [file, setFile] = useState('./kenneth-petiote.pdf');\n  const [numPages, setNumPages] = useState(null);\n\n  function onFileChange(event) {\n    setFile(event.target.files[0]);\n  }\n\n  function onDocumentLoadSuccess({\n    numPages: nextNumPages\n  }) {\n    setNumPages(nextNumPages);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Example\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"react-pdf sample page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Example__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Example__container__load\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: \"Load from file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onFileChange,\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Example__container__document\",\n        children: /*#__PURE__*/_jsxDEV(Document, {\n          file: file,\n          onLoadSuccess: onDocumentLoadSuccess,\n          options: options,\n          children: Array.from(new Array(numPages), (el, index) => /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: index + 1\n          }, `page_${index + 1}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sample, \"Tve4x6sA/aJQzMgsmK3dLvI1u5U=\");\n\n_c = Sample;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"sources":["/Users/Ken/Dropbox/Rutgers_Coding_BootCamp/React-Portfolio/client/src/components/Resume/index.js"],"names":["React","useState","Document","Page","options","cMapUrl","cMapPacked","Sample","file","setFile","numPages","setNumPages","onFileChange","event","target","files","onDocumentLoadSuccess","nextNumPages","Array","from","el","index"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kCAA/B;AACA,OAAO,6CAAP,C,CAEA;;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,QADK;AAEdC,EAAAA,UAAU,EAAE;AAFE,CAAhB;AAKA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,uBAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;;AAEA,WAASW,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAP;AACD;;AAED,WAASC,qBAAT,CAA+B;AAAEN,IAAAA,QAAQ,EAAEO;AAAZ,GAA/B,EAA2D;AACzDN,IAAAA,WAAW,CAACM,YAAD,CAAX;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AACE,UAAA,QAAQ,EAAEL,YADZ;AAEE,UAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAEJ,IADR;AAEE,UAAA,aAAa,EAAEQ,qBAFjB;AAGE,UAAA,OAAO,EAAEZ,OAHX;AAAA,oBAMIc,KAAK,CAACC,IAAN,CACE,IAAID,KAAJ,CAAUR,QAAV,CADF,EAEE,CAACU,EAAD,EAAKC,KAAL,kBACE,QAAC,IAAD;AAEE,YAAA,UAAU,EAAEA,KAAK,GAAG;AAFtB,aACQ,QAAOA,KAAK,GAAG,CAAE,EADzB;AAAA;AAAA;AAAA;AAAA,kBAHJ;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAlDuBd,M;;KAAAA,M","sourcesContent":["// RESUME JS\n// ---------------------------------------------------------------------------\n\n// import React, { useState } from 'react';\n// import { Document, Page } from 'react-pdf'\n// // import \"./style.css\";\n\n// function Resume() {\n//     \n//     const [file, setFile] = useState('./kenneth-petiote.pdf');\n//     const [numPages, setNumPages] = useState(null);\n//     const [pageNumber, setPageNumber] = useState(1);\n\n//     function onDocumentLoadSuccess({ numPages }) {\n//         setNumPages(numPages);\n//     }\n\n//     return (\n//         <div>\n//             <Document \n//                 file={file}\n//                 onLoadSuccess={onDocumentLoadSuccess} \n//             >\n//                 <Page pageNumber={1} />\n//             </Document>\n//             <p>\n//                 Page {pageNumber} of {numPages}\n//             </p>\n//         </div>\n//     )\n// }\n\n// export default Resume;\n\nimport React, { useState } from 'react';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\n\n// import './Sample.less';\n\nconst options = {\n  cMapUrl: 'cmaps/',\n  cMapPacked: true,\n};\n\nexport default function Sample() {\n  const [file, setFile] = useState('./kenneth-petiote.pdf');\n  const [numPages, setNumPages] = useState(null);\n\n  function onFileChange(event) {\n    setFile(event.target.files[0]);\n  }\n\n  function onDocumentLoadSuccess({ numPages: nextNumPages }) {\n    setNumPages(nextNumPages);\n  }\n\n  return (\n    <div className=\"Example\">\n      <header>\n        <h1>react-pdf sample page</h1>\n      </header>\n\n      <div className=\"Example__container\">\n        <div className=\"Example__container__load\">\n          <label htmlFor=\"file\">Load from file:</label>\n          {/* {' '} */}\n          <input\n            onChange={onFileChange}\n            type=\"file\"\n          />\n        </div>\n\n        <div className=\"Example__container__document\">\n          <Document\n            file={file}\n            onLoadSuccess={onDocumentLoadSuccess}\n            options={options}\n          >\n            {\n              Array.from(\n                new Array(numPages),\n                (el, index) => (\n                  <Page\n                    key={`page_${index + 1}`}\n                    pageNumber={index + 1}\n                  />\n                ),\n              )\n            }\n          </Document>\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}